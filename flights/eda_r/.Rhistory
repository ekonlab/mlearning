compare_df_wide = gather(compare_df,"year","value",3)
?gather()
library(tidyr)
# Convert year to wide format using "gather"
# formula = (data,key,value,columns_to_gather)
compare_df_wide = gather(compare_df,"year","value",3)
head(compare_df_wide)
# Convert year to wide format using "gather"
# formula = (data,key,value,columns_to_gather)
compare_df_wide = gather(compare_df,"year","value",2:3)
head(compare_df_wide)
compare_df = sub_saharan_compare %>%
select("country","rural_water_imp_per","year")
head(compare_df)
compare_df = sub_saharan_compare %>%
select("country","year","rural_water_imp_per")
# Convert year to wide format using "gather"
# formula = (data,key,value,columns_to_gather)
compare_df_wide = gather(compare_df,"year","value",2:3)
head(compare_df_wide)
# GATHER = WHEN THERE IS COLUMNS WHICH ARE NOT VARIABLES (FROM WIDE TO LONG)
# formula = (data,key,value,columns_to_gather)
tidy.cases = gather(cases, "year", "n", 2:4)
cases
library(EDAWR)
compare_df = sub_saharan_compare %>%
select("country","year","rural_water_imp_per")
head(compare_df)
# Convert year to wide format using "spread"
# formula = (data,key,value)
compare_df_wide = spred(compare_df,"year","rural_water_imp_per")
# Convert year to wide format using "spread"
# formula = (data,key,value)
compare_df_wide = spread(compare_df,"year","rural_water_imp_per")
head(compare_df_wide)
compare_df_wide$diff = compare_df_wide$`2015` - compare_df_wide$`1990`
head(compare_df_wide)
head(compare_df_wide)
compare_df_wide
g3
g5_b = ggplot(compare_df_wide,aes(x = reorder(country,-diff),y = doff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("Percentage of rural population in Sub-Saharan Africa countries with access to clean water in 1990 and 2015") +  xlab("countries") + ylab("% of rural population with access to clean water")
g5_b
g5_b = ggplot(compare_df_wide,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("Percentage of rural population in Sub-Saharan Africa countries with access to clean water in 1990 and 2015") +  xlab("countries") + ylab("% of rural population with access to clean water")
g5_b
g5_b = ggplot(compare_df_wide,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("% of rural population in Sub-Saharan Africa countries with access to clean water (2015 - 1990") +  xlab("countries") + ylab("% of rural population with access to clean water")
g5_b
g5_b + coord_flip()
g5_b + coord_flip()
g5_b = ggplot(compare_df_wide,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("% of rural population in Sub-Saharan Africa countries with access to clean water (2015 - 1990)") +  xlab("countries") + ylab("% 2015 - % 1990")
g5_b
g5_b + coord_flip()
g5_b + coord_flip()
g3
years_2 = c(1995,2019)
sub_saharan_compare_2 = sub_saharan_df %>%
filter(year %in% years_2)
sub_saharan_compare_2$year = as.factor(as.numeric(sub_saharan_compare_2$year))
head(sub_saharan_compare_2)
compare_df_2 = sub_saharan_compare_2 %>%
select("country","year","rural_water_imp_per")
# Convert year to wide format using "spread"
# formula = (data,key,value)
compare_df_wide_2 = spread(compare_df_2,"year","rural_water_imp_per")
compare_df_wide_2$diff = compare_df_wide_2$`2010` - compare_df_wide_2$`1995`
head(compare_df_wide_2)
years_2 = c(1995,2010)
sub_saharan_compare_2 = sub_saharan_df %>%
filter(year %in% years_2)
sub_saharan_compare_2$year = as.factor(as.numeric(sub_saharan_compare_2$year))
compare_df_2 = sub_saharan_compare_2 %>%
select("country","year","rural_water_imp_per")
compare_df_wide_2 = spread(compare_df_2,"year","rural_water_imp_per")
compare_df_wide_2$diff = compare_df_wide_2$`2010` - compare_df_wide_2$`1995`
head(compare_df_wide_2)
head(compare_df_wide_2)
compare_df_wide_2
g3
g5_c = ggplot(compare_df_wide_2,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("% of rural population in Sub-Saharan Africa countries with access to clean water (2010 - 1995)") +  xlab("countries") + ylab("% 2010 - % 1995")
g5_c
g5_c
g5_c + coord_flip()
g5_c + coord_flip()
g5_c + coord_flip()
g5_b + coord_flip()
g5_c + coord_flip()
39.75*6
357,75+119,75
357.75+119.75
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) # avoid scientic notation
# Set up current directory
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("/Users/albertogonzalez/Dropbox/work_17/bestiario/Mark")
# Import Natgeo water data set and have a initial overiew
natgeo_water = read.csv("natgeo_water_refined.csv")
head(natgeo_water)
eth_df = natgeo_water %>%
filter(iso == "ETH")
# And now we are going to build our first line chart to try to answer the question
g1 = ggplot(eth_df,aes(year,rural_water_imp_per)) + geom_line() + theme_minimal() + ggtitle("Percentage of rural population in Ethiopia with access to clean water from 1990 to 2015") +  xlab("years") + ylab("% of rural population with access to clean water")
g1
g1
sub_saharan_init = sub_saharan_df %>%
filter(year == 1990)
sub_saharan_last = sub_saharan_df %>%
filter(year == 2015)
years = c(1990,2015)
sub_saharan_compare = sub_saharan_df %>%
filter(year %in% years)
sub_saharan_compare$year = as.factor(as.numeric(sub_saharan_compare$year))
compare_df = sub_saharan_compare %>%
select("country","year","rural_water_imp_per")
# Convert year to wide format using "spread"
# formula = (data,key,value)
compare_df_wide = spread(compare_df,"year","rural_water_imp_per")
compare_df_wide$diff = compare_df_wide$`2015` - compare_df_wide$`1990`
head(compare_df_wide)
g5_b = ggplot(compare_df_wide,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("% of rural population in Sub-Saharan Africa countries with access to clean water (2015 - 1990)") +  xlab("countries") + ylab("% 2015 - % 1990")
g5_b
g5_b + coord_flip()
g5_b + coord_flip()
years_2 = c(1995,2010)
sub_saharan_compare_2 = sub_saharan_df %>%
filter(year %in% years_2)
sub_saharan_compare_2$year = as.factor(as.numeric(sub_saharan_compare_2$year))
compare_df_wide_2 = spread(compare_df_2,"year","rural_water_imp_per")
compare_df_wide_2$diff = compare_df_wide_2$`2010` - compare_df_wide_2$`1995`
head(compare_df_wide_2)
g5_c = ggplot(compare_df_wide_2,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("% of rural population in Sub-Saharan Africa countries with access to clean water (2010 - 1995)") +  xlab("countries") + ylab("% 2010 - % 1995")
g5_c
g5_c + coord_flip()
g5_c + coord_flip()
g5_c + coord_flip()
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) # avoid scientic notation
# Set up current directory
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("/Users/albertogonzalez/Dropbox/work_17/bestiario/Mark")
# Import Natgeo water data set and have a initial overiew
natgeo_water = read.csv("natgeo_water_refined.csv")
str(natgeo_water)
eth_df = natgeo_water %>%
filter(iso == "ETH")
# And now we are going to build our first line chart to try to answer the question
g1 = ggplot(eth_df,aes(year,rural_water_imp_per)) + geom_line() + theme_minimal() + ggtitle("Percentage of rural population in Ethiopia with access to clean water from 1990 to 2015") +  xlab("years") + ylab("% of rural population with access to clean water")
g1
g1
sub_saharan_df = natgeo_water %>%
filter(region == "Sub-Saharan Africa")
sub_saharan_init = sub_saharan_df %>%
filter(year == 1990)
g4 = ggplot(sub_saharan_init,aes(x = reorder(country,-rural_water_imp_per),y = rural_water_imp_per)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("Percentage of rural population in Sub-Saharan Africa countries with access to clean water in 1990") +  xlab("countries") + ylab("% of rural population with access to clean water")
g4
sub_saharan_last = sub_saharan_df %>%
filter(year == 2015)
years = c(1990,2015)
sub_saharan_compare = sub_saharan_df %>%
filter(year %in% years)
sub_saharan_compare$year = as.factor(as.numeric(sub_saharan_compare$year))
select("country","year","rural_water_imp_per")
compare_df = sub_saharan_compare %>%
select("country","year","rural_water_imp_per")
# Convert year to wide format using "spread"
# formula = (data,key,value)
compare_df_wide = spread(compare_df,"year","rural_water_imp_per")
compare_df_wide$diff = compare_df_wide$`2015` - compare_df_wide$`1990`
g5_b = ggplot(compare_df_wide,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("% of rural population in Sub-Saharan Africa countries with access to clean water (2015 - 1990)") +  xlab("countries") + ylab("% 2015 - % 1990")
g5_b
years_2 = c(1995,2010)
sub_saharan_compare_2 = sub_saharan_df %>%
filter(year %in% years_2)
sub_saharan_compare_2$year = as.factor(as.numeric(sub_saharan_compare_2$year))
compare_df_2 = sub_saharan_compare_2 %>%
select("country","year","rural_water_imp_per")
# Convert year to wide format using "spread"
# formula = (data,key,value)
compare_df_wide_2 = spread(compare_df_2,"year","rural_water_imp_per")
compare_df_wide_2$diff = compare_df_wide_2$`2010` - compare_df_wide_2$`1995`
head(compare_df_wide_2)
g5_c = ggplot(compare_df_wide_2,aes(x = reorder(country,-diff),y = diff)) + geom_bar(stat = "identity") + theme_minimal() + ggtitle("% of rural population in Sub-Saharan Africa countries with access to clean water (2010 - 1995)") +  xlab("countries") + ylab("% 2010 - % 1995")
g5_c
knitr::opts_chunk$set(echo = TRUE)
library(rjson)
library(dplyr)
setwd("/Users/albertogonzalez/Documents/GitHub/mlearning/flights/middle_east")
# Load first file
input_file = fromJSON(file="flights.json")
df1 = as.data.frame(input_file)
str(df1)
# Load first file
input_file = fromJSON(file="flights.json",nullValue = NA)
# Load first file
input_file = fromJSON(file="flights.json")
# Convert to dataframe
df = do.call("rbind.fill", lapply(json_data, as.data.frame))
# Convert to dataframe
df = do.call("rbind.fill", lapply(input_file, as.data.frame))
library(plyr)
knitr::opts_chunk$set(echo = TRUE)
library(rjson)
library(plyr)
setwd("/Users/albertogonzalez/Documents/GitHub/mlearning/flights/middle_east")
# Load first file
input_file = fromJSON(file="flights.json")
# Convert to dataframe
df = do.call("rbind.fill", lapply(input_file, as.data.frame))
str(df)
# Get needed variables
df_1 = df[c("adhex","flight_id","lat","lon","alt","speed","squawk","type","timestamp","track")]
# Get needed variables
df_1 = df[c("adhex","flight_id","lat","lon","alt","speed","squawk","type","timestamp","track"),]
str(df1)
str(df_1)
# Get needed variables
df_1 = df[,c("adhex","flight_id","lat","lon","alt","speed","squawk","type","timestamp","track")]
# Get needed variables
df_1 = df[,c("adhex","flight_id","lat","lng","alt","speed","squawk","type","timestamp","track")]
# Get needed variables
df_1 = df[,c("adshex","flight_id","lat","lng","alt","speed","squawk","type","timestamp","track")]
str(df_1)
# Number of unique flights
u_flights = unique(df_1$adshex)
length(u_flights)
library(dplyr)
library(tidyr)
library(ggmap)
library(ggplot2)
one_flight = df_1 %>%
filter(adshex="1053a509")
one_flight = df_1 %>%
filter(adshex=="1053a509")
str(one_flight)
head(u_flights)
one_flight = df_1 %>%
filter(adshex=="1053f4b3")
str(one_flight)
plot(lat,lon, data = one_flight)
plot(lat,lng, data = one_flight)
plot(one_flight$lat,one_flight$lng)
m <- get_map("Madrid",zoom=8,maptype="toner",source="stamen")
ggmap(m, base_layer = ggplot(aes(x = one_flight$lat, y = one_flight$lng), data = one_flight))  + geom_point(color="yellow",alpha=0.3)
qmplot(one_flight$lng, one_flight$lat, data = one_flight,
colour = I('red'), size = I(3), darken = .3)
google <- get_googlemap('Madrid', zoom = 8)
library(ggmap)
google <- get_googlemap('Madrid', zoom = 8)
ggmap(google) + geom_point(aes(x = one_flight$lng, y = one_flight$lat), data = one_flight, colour = 'red', size = 2)
google <- get_googlemap('New York', zoom = 8)
google <- get_googlemap('new york', zoom = 8)
ggmap(google) + geom_point(aes(x = one_flight$lng, y = one_flight$lat), data = one_flight, colour = 'red', size = 2)
google <- get_googlemap('new york', zoom = 10)
google <- get_googlemap('madrid', zoom = 10)
google <- get_googlemap('dublin', zoom = 10)
google <- get_googlemap('london', zoom = 10)
ggmap(google) + geom_point(aes(x = one_flight$lng, y = one_flight$lat), data = one_flight, colour = 'red', size = 2)
g1 = ggplot(data = one_flight,aes(lng,lat)) + geom_point()
g1
g1
one_flight
str(df)
df_1 = df[,c("adshex","flight_id","lat","lng","alt","speed","squawk","type","timestamp","track","s_airport","t_airport")]
str(df_1)
u_flights = unique(df_1$adshex)
length(u_flights)
one_flight = df_1 %>%
filter(adshex=="1053f4b3")
one_flight
g1 = ggplot(data = one_flight,aes(lng,lat)) + geom_point()
g1
g1 = ggplot(data = one_flight,aes(lng,lat)) + geom_line()
g1
g1
str(df_1)
length(u_flights)
g2 = ggplot(data = df_1,aes(lng,lat)) + geom_point() + geom_line()
g2
g2 = ggplot(data = df_1,aes(lng,lat)) + geom_line()
g2
g2 = ggplot(data = df_1,aes(lng,lat,group="adshex")) + geom_line()
g2
g2
g2 = ggplot(data = df_1,aes(lng,lat,group=adshex)) + geom_line()
g2
g2 = ggplot(data = df_1,aes(lng,lat)) + geom_line(aes(group = adshex))
g2
g2 = ggplot(data = df_1,aes(lng,lat))
g2 + geom_line(aes(group = adshex))
g2 + geom_line(aes(group = adshex))
g2 = ggplot(data = df_1,aes(lat,lng))
g2 + geom_line(aes(group = adshex))
g2 = ggplot(data = df_1,aes(lng,lat))
g2 + geom_line(aes(group = adshex))
summary(df_1)
g2 + geom_line(aes(group = adshex))
lat_40 = df_1 %>%
filter(lat>=40)
dim(lat_40)
g3 = ggplot(data = lat_40,aes(lng,lat))
g3 + geom_line(aes(group = adshex))
g3 + geom_line(aes(group = adshex))
head(df_1)
list
list.files()
# Load first file
input_file = fromJSON(file="02-13_22.24.json")
# Convert to dataframe
df = do.call("rbind.fill", lapply(input_file, as.data.frame))
str(df)
df_1 = df[,c("adshex","flight_id","lat","lng","alt","speed","squawk","type","timestamp","track","s_airport","t_airport")]
str(df_1)
summary(df_1)
# Number of unique flights
u_flights = unique(df_1$adshex)
length(u_flights)
head(u_flights)
one_flight = df_1 %>%
filter(adshex=="1053f4b3")
str(one_flight)
head(one_flight)
head(one_flight)
g1 = ggplot(data = one_flight,aes(lng,lat)) + geom_line()
g1
g2 = ggplot(data = df_1,aes(lng,lat))
g2 + geom_line(aes(group = adshex))
lat_40 = df_1 %>%
filter(lat>=40)
dim(lat_40)
g3 = ggplot(data = lat_40,aes(lng,lat))
g3 + geom_line(aes(group = adshex))
g3 + geom_line(aes(group = adshex))
g3 = ggplot(data = lat_40,aes(lng,lat))
g3 + geom_line(aes(group = adshex,alpha=0.2))
g3 + geom_line(aes(group = adshex,alpha=0.2))
head(df_1)
origin = df_1 %>%
unique(s_airport)
origin = unique(df_1$s_airport)
str(origin)
head(origin)
destination = unique(df_1$t_airport)
head(destintion)
head(destination)
dep_ist = df_1 %>%
filter(s_airport==IST)
dep_ist = df_1 %>%
filter(s_airport=="IST")
str(dep_ist)
head(dep_ist)
head(dep_ist)
ist = df_1 %>%
filter(s_airport=="IST")
str(ist)
head(ist)
g4 = ggplot(data = ist,aes(lng,lat))
g4 + geom_line(aes(group = adshex,alpha=0.2))
g4 + geom_line(aes(group = adshex,alpha=0.2))
head(one_flight)
g1 = ggplot(data = one_flight,aes(lng,lat)) + geom_line()
g1
g4 = ggplot(data = ist,aes(lng,lat))
g4 + geom_line(aes(group = adshex,alpha=0.2))
ist = df_1 %>%
filter(t_airport=="IST")
g4 = ggplot(data = ist,aes(lng,lat))
g4 + geom_line(aes(group = adshex,alpha=0.2))
g4 + geom_line(aes(group = adshex,alpha=0.2))
head(origin)
g1
origin = unique(df_1$t_airport)
origin
destination = unique(df_1$s_airport)
destination
str(ist)
# Ist and combinations
table(ist$s_airport)
# Ist and combinations
combi = as.data.frame(table(ist$s_airport))
head(combi)
combi %>%
filter(Freq>0)
combi
c =combi %>%
filter(Freq>0)
c
c =combi %>%
filter(Freq>0) %>%
arrange(Freq)
c
c =combi %>%
filter(Freq>0) %>%
arrange(desc(Freq))
c
c
ist = df_1 %>%
filter(s_airport=="IST")
str(ist)
head(ist)
head(ist)
combi = as.data.frame(table(ist$t_airport))
head(combi)
c =combi %>%
filter(Freq>0) %>%
arrange(desc(Freq))
c
c
g3 = ggplot(data = lat_40,aes(lng,lat))
g3 + geom_line(aes(group = adshex,alpha=0.2))
g3 + geom_line(aes(group = adshex,alpha=0.1))
g3 + geom_line(aes(group = adshex,alpha=0.8))
g3 + geom_line(aes(group = adshex,alpha=0.8))
g3 = ggplot(data = lat_40,aes(lng,lat))
g3 + geom_line(aes(group = adshex),alpha=0.8)
g3 = ggplot(data = lat_40,aes(lng,lat))
g3 + geom_line(aes(group = adshex),alpha=0.2)
g3 + geom_line(aes(group = adshex),alpha=0.2)
g3 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
g3 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
london = df_1 %>%
filter(lng<-10)
london = df_1 %>%
filter(lng<=-10)
dim(london)
g5 = ggplot(data = london,aes(lng,lat))
g5 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
london = df_1 %>%
filter(lng>=-10)
g5 = ggplot(data = london,aes(lng,lat))
g5 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
g5 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
london = df_1 %>%
filter(lng>=-8)
g5 = ggplot(data = london,aes(lng,lat))
g5 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
g5 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
str(df_1)
length(input_file)
write.csv(x = df_1,file = "flights_middle_east_1.csv",row.names = FALSE)
getwd()
setwd("/Users/albertogonzalez/Documents/GitHub/mlearning/flights/middle_east")
write.csv(x = df_1,file = "flights_middle_east_1.csv",row.names = FALSE)
class(input_file)
dim(input_file)
length(input_file)
str(df)
head(df)
head(df_1)
# Number of unique flights
u_flights = unique(df_1$adshex)
length(u_flights)
head(u_flights)
one_flight = df_1 %>%
filter(adshex=="1053f4b3")
str(one_flight)
head(one_flight)
head(one_flight)
g1 = ggplot(data = one_flight,aes(lng,lat)) + geom_line()
g1
g1
g2 = ggplot(data = df_1,aes(lng,lat))
g2 + geom_line(aes(group = adshex))
g2
g2 + geom_line(aes(group = adshex))
lat_40 = df_1 %>%
filter(lat>=40)
dim(lat_40)
g3 = ggplot(data = lat_40,aes(lng,lat))
g3 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
g3 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
summary(df_1)
g3 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
origin = unique(df_1$s_airport)
head(origin)
destination = unique(df_1$t_airport)
head(destination)
ist = df_1 %>%
filter(s_airport=="IST")
str(ist)
head(ist)
g4 = ggplot(data = ist,aes(lng,lat))
g4 + geom_line(aes(group = adshex),alpha=0.2)
g4 + geom_line(aes(group = adshex),alpha=0.2)
ist
combi = as.data.frame(table(ist$t_airport))
head(combi)
c =combi %>%
filter(Freq>0) %>%
arrange(desc(Freq))
c
c
london = df_1 %>%
filter(lng>=-8)
g5 = ggplot(data = london,aes(lng,lat))
g5 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
g5 + geom_line(aes(group = adshex),alpha=0.2) + theme_minimal()
knitr::opts_chunk$set(out.width="750px", dpi=300)
planes <- planes %>%
mutate(type2=as.integer(as.factor(type)))
setwd("/Users/albertogonzalez/Documents/GitHub/mlearning/flights")
list.files()
# load planes_features data
planes <- read_csv("data/planes_features.csv")
# load planes_features data
planes <- read_csv("data/planes_features.csv")
planes <- read_csv("data/planes_features.csv")
gead(df_1)
head(df_1)
one_flight
head(df)
